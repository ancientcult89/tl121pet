@inject IMeetingRepository _meetingRepository
@inject IPeopleRepository _peopleRepository
@model MeetingEditFormVM
@*<partial name="_Validation"></partial>*@

<h5 class="bg-@Model.Theme text-white text-center p-2  rounded-top">@Model.Mode.ToString()</h5>
<div class="shadow-lg p-3 mb-5 bg-white rounded">

    <form asp-action="@Model.Mode" method="post">
        @if (@Model.Mode == FormMode.Edit || @Model.Mode == FormMode.Process)
        {
            <div class="form-group">
                <label asp-for="SelectedItem.MeetingId"></label>
                <input class="form-control" asp-for="SelectedItem.MeetingId" readonly/>
            </div>
        }
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingPlanDate"></label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingPlanDate" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="SelectedItem.MeetingPlanDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingDate"></label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingDate" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="SelectedItem.MeetingDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label>Meeting Type</label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingTypeId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.MeetingTypeId" class="form-control" asp-items="@(new SelectList(_meetingRepository.GetMeetingTypes(), "MeetingTypeId", "MeetingTypeName"))" disabled="@Model.IsReadonly">
                <option value="" disabled selected>Choose a Meeting Type</option>
            </select>
        </div>
        <div class="form-group">
            <label>Person</label>
            <div>
                <span asp-validation-for="SelectedItem.PersonId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.PersonId" class="form-control" asp-items="@(new SelectList(_peopleRepository.GetInitials(), "PersonId", "Initials"))" disabled="@Model.IsReadonly">
                <option value="" disabled selected>Choose a Person</option>
            </select>
        </div>
        <div class="form-check mt-3 mb-3">
            <div>
                <span asp-validation-for="SelectedItem.FollowUpIsSended" class="text-danger"></span>
            </div>
            <input class="form-check-input" type="checkbox" asp-for="SelectedItem.FollowUpIsSended" disabled="@Model.IsReadonly"/>
            <label class="form-check-label" asp-for="SelectedItem.FollowUpIsSended">
                Follow up is Sended
            </label>
        </div>
        @*TODO: extract into foreach*@
        <div class="form-check mt-3 mb-3">
            <div>
                <span asp-validation-for="MeetingGoals" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="MeetingGoals" disabled="@Model.IsReadonly" />
        </div>
        <div class="form-check mt-3 mb-3">
            <div>
                <span asp-validation-for="MeetingNotes" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="MeetingNotes" disabled="@Model.IsReadonly" />
        </div>

        @if (Model.Mode != FormMode.Details)
        {
            <button class="btn btn-info mt-2" type="submit">
                Save
            </button>
        }
        <a class="btn btn-secondary mt-2" asp-action="MeetingList">Back</a>
        <a class="btn btn-success mt-2" 
            asp-action="FollowUp" 
            asp-route-meetingId="@Model.SelectedItem.MeetingId"
            asp-route-personId="@Model.SelectedItem.PersonId"
            asp-route-mode="@Model.Mode">
                Generate FollowUp
        </a>
    </form>
    <p></p>

    @if (@Model.Mode == FormMode.Process || @Model.Mode == FormMode.Details)
    {
        <div class="container" >
            <div class="row">
                <partial name="MeetingNotesList" disabled="@Model.IsReadonly"/>
                <partial name="MeetingGoalsList" disabled="@Model.IsReadonly"/>
            </div>
        </div>
    }
</div>