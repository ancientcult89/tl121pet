@inject IMeetingRepository _meetingRepository
@inject IPeopleRepository _peopleRepository
@inject IPersonService _personService
@inject IOneToOneService _oneToOneService
@model SimpleEditFormVM<MeetingDTO>
@inject IViewLocalizer Localizer
<partial name="_Validation"></partial>

<h5 class="bg-@Model.Theme text-white text-center p-2  rounded-top">@Localizer[Model.Mode.ToString()]</h5>
<div class="shadow-lg p-3 mb-5 bg-white rounded">
    <form asp-action="@Model.Mode" method="post">
        @if (@Model.Mode == FormMode.Edit || @Model.Mode == FormMode.Process)
        {
            <div class="form-group" hidden>
                <label asp-for="SelectedItem.MeetingId"></label>
                <input class="form-control" asp-for="SelectedItem.MeetingId" readonly/>
            </div>
        }
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingPlanDate">@Localizer["MeetingPlanDate"]</label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingPlanDate" class="text-danger"></span>
            </div>
            <input type="date" class="form-control" asp-for="SelectedItem.MeetingPlanDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingDate">@Localizer["MeetingDate"]</label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingDate" class="text-danger"></span>
            </div>
            <input type="date" class="form-control" asp-for="SelectedItem.MeetingDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label>@Localizer["MeetingType"]</label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingTypeId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.MeetingTypeId" class="form-control" asp-items="@(new SelectList(_meetingRepository.GetMeetingTypes(), "MeetingTypeId", "MeetingTypeName"))" disabled="@Model.IsReadonly">
                <option disabled selected>@Localizer["ChooseMeetingType"]</option>
            </select>
        </div>
        <div class="form-group">
            <label>@Localizer["Person"]</label>
            <div>
                <span asp-validation-for="SelectedItem.PersonId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.PersonId" class="form-control" asp-items="@(new SelectList(await _personService.GetInitialsAsync(), "PersonId", "Initials"))" disabled="@Model.IsReadonly">
                <option value="" disabled selected>@Localizer["ChooseAPerson"]</option>
            </select>
        </div>
        <div class="form-check mt-3 mb-3">
            <div>
                <span asp-validation-for="SelectedItem.FollowUpIsSended" class="text-danger"></span>
            </div>
            <input class="form-check-input" type="checkbox" asp-for="SelectedItem.FollowUpIsSended" disabled="@Model.IsReadonly"/>
            <label class="form-check-label" asp-for="SelectedItem.FollowUpIsSended">
                @Localizer["FollowUpIsSended"]
            </label>
        </div>

        @if (Model.Mode != FormMode.Details)
        {
            <button class="btn btn-info mt-2" type="submit">
                @Localizer["Save"]
            </button>
        }
        <a class="btn btn-secondary mt-2" asp-action="MeetingList">@Localizer["Back"]</a>
        <a class="btn btn-success mt-2" 
            asp-action="FollowUp" 
            asp-route-meetingId="@Model.SelectedItem.MeetingId"
            asp-route-personId="@Model.SelectedItem.PersonId"
            asp-route-mode="@Model.Mode">
                @Localizer["GenerateFollowUp"]
        </a>
        @if(Model.Mode != FormMode.Process)
        {
            <a class="btn btn-success mt-2" asp-action="Process" asp-route-id="@Model.SelectedItem.MeetingId" >@Localizer["Process"]</a>            
        }
    </form>
    <p></p>
    <hr></hr>

    <div class="container">
        <div class="row">
            <pre>@(_oneToOneService.GetPreviousMeetingNoteAndGoals(Model.SelectedItem.MeetingId, Model.SelectedItem.PersonId))</pre>
        </div>
        <hr></hr>                
        <div class="row">
            <partial name="MeetingNotesList" 
                disabled="@Model.IsReadonly" 
                model="@(new NoteEditListVM(){
                    IsNewRecord = Model.IsNewRecord,
                    SelectedItem = Model.SelectedItem.MeetingId,
                    Mode = Model.Mode
            })"/>
        </div>
        <hr></hr>
        <div class="row">
            <partial name="MeetingGoalsList" 
                disabled="@Model.IsReadonly"
                model="@(new GoalEditListVM(){
                    IsNewRecord = Model.IsNewRecord,
                    SelectedItem = Model.SelectedItem.MeetingId,
                    Mode = Model.Mode
            })"/>
        </div>
    </div>
</div>