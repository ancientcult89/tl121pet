@using tl121pet.ViewModels
@inject IMeetingRepository _meetingRepository
@model BaseVM<Meeting>
<partial name="_Validation"></partial>

<h5 class="bg-@Model.Theme text-white text-center p-2">@Model.Mode.ToString()</h5>

<form asp-action="EditMeeting" method="post">
    @if (@Model.Mode == tl121pet.Storage.FormMode.Edit)
    {
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingId"></label>
            <input class="form-control" asp-for="SelectedItem.PersonId" readonly/>
        </div>        
    }
    <div class="form-group">
        <label asp-for="SelectedItem.MeetingPlanDate"></label>
        <div>
            <span asp-validation-for="SelectedItem.MeetingPlanDate" class="text-danger"></span>
        </div>
        <input class="form-control" asp-for="SelectedItem.MeetingPlanDate" disabled="@Model.IsReadonly"/>
    </div>
    <div class="form-group">
        <label>Grade</label>
        <div>
            <span asp-validation-for="SelectedItem.MeetingTypeId" class="text-danger"></span>
        </div>
        <select asp-for="SelectedItem.MeetingTypeId" class="form-control" asp-items="@(new SelectList(_meetingRepository.GetMeetingTypes(), "MeetingTypeId", "MeetingTypeName"))" disabled="@Model.IsReadonly">
            <option value="" disabled selected>Choose a Meeting Type</option>
        </select>
    </div>

    @if (Model.Mode != tl121pet.Storage.FormMode.Details)
    {
        <button class="btn btn-info mt-2" type="submit">
            Save
        </button>       
    }
    <a class="btn btn-secondary mt-2" asp-action="MeetingList">Back</a>
</form>