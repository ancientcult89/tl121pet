@inject IMeetingRepository _meetingRepository
@inject IPeopleRepository _peopleRepository
@model MeetingEditFormVM
<partial name="_Validation"></partial>

<h5 class="bg-@Model.Theme text-white text-center p-2  rounded-top">@Model.Mode.ToString()</h5>
<div class="shadow-lg p-3 mb-5 bg-white rounded">

    <form asp-action="MeetingCreate" method="post">
        @if (@Model.Mode == FormMode.Edit || @Model.Mode == FormMode.Process)
        {
            <div class="form-group">
                <label asp-for="SelectedItem.MeetingId"></label>
                <input class="form-control" asp-for="SelectedItem.MeetingId" readonly/>
            </div>
        }
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingPlanDate"></label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingPlanDate" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="SelectedItem.MeetingPlanDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label asp-for="SelectedItem.MeetingDate"></label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingDate" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="SelectedItem.MeetingDate" disabled="@Model.IsReadonly"/>
        </div>
        <div class="form-group">
            <label>Meeting Type</label>
            <div>
                <span asp-validation-for="SelectedItem.MeetingTypeId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.MeetingTypeId" class="form-control" asp-items="@(new SelectList(_meetingRepository.GetMeetingTypes(), "MeetingTypeId", "MeetingTypeName"))" disabled="@Model.IsReadonly">
                <option value="" disabled selected>Choose a Meeting Type</option>
            </select>
        </div>
        <div class="form-group">
            <label>Person</label>
            <div>
                <span asp-validation-for="SelectedItem.PersonId" class="text-danger"></span>
            </div>
            <select asp-for="SelectedItem.PersonId" class="form-control" asp-items="@(new SelectList(_peopleRepository.GetPeople(), "PersonId", "FirstName"))" disabled="@Model.IsReadonly">
                <option value="" disabled selected>Choose a Person</option>
            </select>
        </div>
        <div class="form-check">
            <div>
                <span asp-validation-for="SelectedItem.FollowUpIsSended" class="text-danger"></span>
            </div>
            <input class="form-check-input" type="checkbox" asp-for="SelectedItem.FollowUpIsSended" disabled="@Model.IsReadonly"/>
            <label class="form-check-label" asp-for="SelectedItem.FollowUpIsSended">
                Follow up is Sended
            </label>
        </div>

        @if (Model.Mode != FormMode.Details)
        {
            <button class="btn btn-info mt-2" type="submit">
                Save
            </button>
        }
        <a class="btn btn-secondary mt-2" asp-action="MeetingList">Back</a>
    </form>
    <p></p>

    @if (@Model.Mode == FormMode.Process)
    {
        <div class="container">
            <div class="row">
                <div class="col-sm">
                    <h5>Notes</h5>
                    <table class="table table-sm table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Description</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (MeetingNote mn in Model.MeetingNotes ?? new List<MeetingNote>())
                            {
                                <form asp-action="DeleteNote" method="post" asp-route-noteId="@mn.MeetingNoteId", asp-route-meetingId="@mn.MeetingId">
                                    <tr class="">
                                        <td>
                                            @mn.MeetingNoteContent                                        
                                        </td>
                                        <td class="text-center">
                                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                        </td>
                                    </tr>
                                </form>
                            }
                        </tbody>
                    </table>
                    <form asp-action="AddNote" method="post">
                        <input class="form-control" asp-for="SelectedItem.MeetingId" disabled="@Model.IsReadonly" hidden/>
                        <input class="form-control" asp-for="NewNote" disabled="@Model.IsReadonly"/>
                        <button class="btn btn-primary mt-2" type="submit">
                            Add Note
                        </button>
                    </form>
                </div>
                <div class="col-sm">
                    <h5>Goals</h5>
                    <table class="table table-sm table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Description</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (MeetingGoal mg in Model.MeetingGoals ?? Enumerable.Empty<MeetingGoal>())
                            {
                                <form asp-action="DeleteGoal" method="post" asp-route-goalId="@mg.MeetingGoalId", asp-route-meetingId="@mg.MeetingId">
                                    <tr class="">
                                        <td>
                                            @mg.MeetingGoalDescription                                        
                                        </td>
                                        <td class="text-center">
                                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                        </td>
                                    </tr>
                                </form>
                            }
                        </tbody>
                    </table>
                    <form asp-action="AddGoal" method="post">
                        <input class="form-control" asp-for="SelectedItem.MeetingId" disabled="@Model.IsReadonly" hidden/>
                        <input class="form-control" asp-for="NewGoal" disabled="@Model.IsReadonly"/>
                        <button class="btn btn-primary mt-2" type="submit">
                            Add Goal
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

@functions{
    public string NoteContent { get; set; } = "do not work";
}